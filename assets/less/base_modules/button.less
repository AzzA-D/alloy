.button-styles() when not (@MODULE-Button) { }
.button-styles() when (@MODULE-Button) {

/* =========================================================================
// BUTTON
// =======================================================================*/

// VARIABLES
// ----------------------------------------------------

@BUTTON-BgColor:                lighten(@COLOR-Base, 20%);
@BUTTON-HoverColor:             darken(@BUTTON-BgColor, 10%);
@BUTTON-TextColor:              @COLOR-White;

@BUTTON-AltColor:               lighten(@COLOR-Purple, 20%);
@BUTTON-AltHoverColor:          darken(@BUTTON-AltColor, 10%);
@BUTTON-AltTextColor:           @COLOR-White;

@BUTTON-DisabledColor:          @COLOR-White;
@BUTTON-DisabledHoverColor:     darken(@BUTTON-DisabledColor, 2%);
@BUTTON-DisabledTextColor:      @COLOR-Grey;

@BUTTON-SuccessColor:           @COLOR-Green;
@BUTTON-SuccessHoverColor:      darken(@BUTTON-SuccessColor, 2%);
@BUTTON-SuccessTextColor:       @COLOR-White;

@BUTTON-InfoColor:              @COLOR-Blue;
@BUTTON-InfoHoverColor:         darken(@BUTTON-InfoColor, 2%);
@BUTTON-InfoTextColor:          @COLOR-White;

@BUTTON-WarningColor:           @COLOR-Orange;
@BUTTON-WarningHoverColor:      darken(@BUTTON-WarningColor, 2%);
@BUTTON-WarningTextColor:       @COLOR-White;

@BUTTON-DangerColor:            @COLOR-Red;
@BUTTON-DangerHoverColor:       darken(@BUTTON-DangerColor, 2%);
@BUTTON-DangerTextColor:        @COLOR-White;

@BUTTON-Anim:                   @ANIM-Curve;

// BUTTON CREATOR
// ----------------------------------------------------

._button-create (@backgroundcolor, @HoverColor, @TextColor) {

    color: @TextColor;
    background-color: @backgroundcolor;

    &:visited {
        color: @TextColor;
    }

    &:hover {
        background-color: @HoverColor;
        color: @TextColor;
    }

}

// BUTTON BASE
// ----------------------------------------------------

.button {
    color: @BUTTON-TextColor;
    background-color: @BUTTON-BgColor;
    display: block;
    text-decoration: none;
    border: none;
    cursor: pointer;
    text-align: center;

    ._padding ((@TYPE-LineHeight/4), (@TYPE-FontSize * 1.5), (@TYPE-LineHeight/4), (@TYPE-FontSize * 1.5));
    ._line-height (@TYPE-FontSize);
    ._transition (all, 0.1s, @BUTTON-Anim);

    &:link,
    &:visited {
        color: @BUTTON-TextColor;
    }

    &:hover {
        color: @BUTTON-TextColor;
        background-color: @BUTTON-HoverColor;
        ._depth-1();
    }

    &:active {
        
    }

}

// BUTTON TYPES
// ----------------------------------------------------

.button--alt {
    ._button-create (@BUTTON-AltColor, @BUTTON-AltHoverColor, @BUTTON-AltTextColor);
}

.button--success {
    ._button-create (@BUTTON-SuccessColor, @BUTTON-SuccessHoverColor, @BUTTON-SuccessTextColor);
}

.button--info {
    ._button-create (@BUTTON-InfoColor, @BUTTON-InfoHoverColor, @BUTTON-InfoTextColor);
}

.button--warning {
    ._button-create (@BUTTON-WarningColor, @BUTTON-WarningHoverColor, @BUTTON-WarningTextColor);
}

.button--danger {
    ._button-create (@BUTTON-DangerColor, @BUTTON-DangerHoverColor, @BUTTON-DangerTextColor);
}

.button.disabled {
    cursor: not-allowed;
    ._button-create (@BUTTON-DisabledColor, @BUTTON-DisabledHoverColor, @BUTTON-DisabledTextColor);
}

.button__totop {
    color: @COLOR-White;
    background-color: @COLOR-Cyan;
    position: fixed;
    bottom: 20px;
    right: 20px;
    text-decoration: none;
    cursor: pointer;
    line-height: 1;
    z-index: @Z-INDEX-Level1;
    ._padding (7);
    ._font-size (30);
    ._depth-4();

    &:link,
    &:visited,
    &:hover,
    &:active {
        color: @COLOR-White;
    }
}

// BUTTON Standards
// ----------------------------------------------------

.button.xsmall {
    ._font-size ((@TYPE-FontSize - 4));
}
.button.small {
    ._font-size ((@TYPE-FontSize - 2));
}
.button.large {
    ._font-size ((@TYPE-FontSize + 2));
}
.button.xlarge {
    ._font-size ((@TYPE-FontSize + 4));
}

.button.full {
    display: block !important;
}

// MOBILE
// ----------------------------------------------------

@media only screen and (max-width: @MQ-Small) {

    .button__mobile {
        display: block;
    }

    .button__mobile--navigation {
        position: absolute;
        top: 0;
        right: 0;
        height: 44px;
        width: 44px;
        cursor: pointer;
        ._padding (21, 12, 0, 12);
    }
    
    .button__mobile--navigation span, .button__mobile--navigation span:before, .button__mobile--navigation span:after {
        cursor: pointer;
        border-radius: 2px;
        height: 2px;
        width: 20px;
        background: @COLOR-White;
        position: absolute;
        display: block;
        content: '';
    }
    
    .button__mobile--navigation span:before {
        top: -4px; 
    }
    
    .button__mobile--navigation span:after {
        bottom: -4px;
    }
    
    .button__mobile--navigation span, .button__mobile--navigation span:before, .button__mobile--navigation span:after {
        transition: all 500ms ease-in-out;
    }
    
    .button__mobile--navigation.active span {
        background-color: transparent;
    }
    
    .button__mobile--navigation.active span:before, .button__mobile--navigation.active span:after {
        top: 0;
    }
    
    .button__mobile--navigation.active span:before {
        transform: rotate(45deg);
    }
    
    .button__mobile--navigation.active span:after {
        transform: translateY(-4px) rotate(-45deg);
        top: 4px;
    }

}

// TABLET & UP
// ----------------------------------------------------

@media only screen and (min-width: @MQ-Medium-min) { 

    .button {
        ._inline-block();
    }

    .button__mobile {
        display: none;
    }

}

// DESKTOP
// ----------------------------------------------------

@media only screen and (min-width: @MQ-Large-min) {

}

} .button-styles();